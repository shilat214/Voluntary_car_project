//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class Voluntary_car_DBEntities1 : DbContext
    {
        public Voluntary_car_DBEntities1()
            : base("name=Voluntary_car_DBEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Assignments> Assignments { get; set; }
        public virtual DbSet<CarHelpRequesters> CarHelpRequesters { get; set; }
        public virtual DbSet<Requests> Requests { get; set; }
        public virtual DbSet<Services> Services { get; set; }
        public virtual DbSet<Volunteers> Volunteers { get; set; }
        public virtual DbSet<VolunteerServices> VolunteerServices { get; set; }
    
        public virtual int CountHoursAndAvgHourLastYear(string volunteerId, ObjectParameter hoursThisMonth, ObjectParameter averageHoursPerMonth)
        {
            var volunteerIdParameter = volunteerId != null ?
                new ObjectParameter("VolunteerId", volunteerId) :
                new ObjectParameter("VolunteerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CountHoursAndAvgHourLastYear", volunteerIdParameter, hoursThisMonth, averageHoursPerMonth);
        }
    
        public virtual int CountVolunteerAndRequestsYearInService(Nullable<int> idService, ObjectParameter countV, ObjectParameter countR)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("idService", idService) :
                new ObjectParameter("idService", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("CountVolunteerAndRequestsYearInService", idServiceParameter, countV, countR);
        }
    
        public virtual ObjectResult<GetUpcomingRequestsForVolunteer_Result> GetUpcomingRequestsForVolunteer(string volunteerId)
        {
            var volunteerIdParameter = volunteerId != null ?
                new ObjectParameter("VolunteerId", volunteerId) :
                new ObjectParameter("VolunteerId", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUpcomingRequestsForVolunteer_Result>("GetUpcomingRequestsForVolunteer", volunteerIdParameter);
        }
    
        public virtual ObjectResult<GetVolunteerMaxCountHourMonth_Result> GetVolunteerMaxCountHourMonth(Nullable<int> idService)
        {
            var idServiceParameter = idService.HasValue ?
                new ObjectParameter("idService", idService) :
                new ObjectParameter("idService", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetVolunteerMaxCountHourMonth_Result>("GetVolunteerMaxCountHourMonth", idServiceParameter);
        }
    }
}
